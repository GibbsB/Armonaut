language: python
python: 3.6-dev

cache:
  pip: true
  directories:
    - ~/.cache
    - ~/.docker

jobs:
  include:
    # Linting
    - stage: unit
      sudo: false
      install:
        - python -m pip install flake8
      script:
        - flake8

    # Codespell
    - stage: unit
      sudo: false
      install:
        - python -m pip install codespell
      script:
        - codespell -f -q 3 armonaut/ tests/

    # Unit Tests
    - stage: unit
      sudo: false
      install:
        - python -m pip install -r requirements.txt -r dev-requirements.txt
      script:
        - pytest tests/unit/
      after_success:
        - codecov

    # Integration Tests (Docker)
    - stage: integration
      sudo: required
      before_install:
        - sudo rm /usr/local/bin/docker-compose
        - curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > docker-compose
        - chmod +x docker-compose
        - sudo mv docker-compose /usr/local/bin
      install:
        - docker-compose build
      script:
        - docker-compose run web pytest
      services:
        - docker

    # Integration Tests (Live)
    - stage: integration
      sudo: required
      env:
        - EXTERNAL_SERVICES=1
        - REDIS_URL=redis://localhost:6379/0
      before_install:
        - psql -c 'CREATE DATABASE armonaut;' -U postgres
      install:
        - python -m pip install -r requirements.txt -r dev-requirements.txt
      script:
        - pytest tests/integration/
      after_success:
        - codecov
      services:
        - redis-server
        - postgresql

notifications:
  email: false
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/24f643ef79e1a441dc7b
    on_success: change
    on_failure: always
    on_start: never

branches:
  only:
    - master
    - develop
